/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../app/rich-grid.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/view_container';
import * as import9 from '../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import10 from '@angular/core/src/linker/template_ref';
import * as import11 from '@angular/common/src/directives/ng_if';
import * as import12 from 'ag-grid-ng2/lib/agGridNg2';
import * as import13 from '../node_modules/ag-grid-ng2/lib/agGridNg2.ngfactory';
import * as import14 from '@angular/core/src/linker/query_list';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from 'ag-grid-ng2/lib/ng2FrameworkFactory';
export class Wrapper_RichGridComponent {
  /*private*/ _eventHandler:Function;
  context:import0.RichGridComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.RichGridComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_RichGridComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_RichGridComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.RichGridComponent>;
  _RichGridComponent_0_3:Wrapper_RichGridComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_RichGridComponent_Host0,renderType_RichGridComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'rich-grid',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_RichGridComponent0(this.viewUtils,this,0,this._el_0);
    this._RichGridComponent_0_3 = new Wrapper_RichGridComponent();
    this.compView_0.create(this._RichGridComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._RichGridComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.RichGridComponent) && (0 === requestNodeIndex))) { return this._RichGridComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._RichGridComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const RichGridComponentNgFactory:import7.ComponentFactory<import0.RichGridComponent> = new import7.ComponentFactory<import0.RichGridComponent>('rich-grid',View_RichGridComponent_Host0,import0.RichGridComponent);
const styles_RichGridComponent:any[] = ['.toolbar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {margin: 2px; padding: 0px;}'];
var renderType_RichGridComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_RichGridComponent,{});
export class View_RichGridComponent0 extends import1.AppView<import0.RichGridComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _el_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _text_22:any;
  _text_23:any;
  _text_24:any;
  _el_25:any;
  _text_26:any;
  _anchor_27:any;
  /*private*/ _vc_27:import8.ViewContainer;
  _TemplateRef_27_5:any;
  _NgIf_27_6:import9.Wrapper_NgIf;
  _text_28:any;
  /*private*/ _expr_32:any;
  /*private*/ _expr_33:any;
  /*private*/ _expr_34:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_RichGridComponent0,renderType_RichGridComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_32 = import6.UNINITIALIZED;
    this._expr_33 = import6.UNINITIALIZED;
    this._expr_34 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'style','width: 800px;'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'h1',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'Rich Grid with Pure JavaScript',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'style','padding: 4px;'),(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'div',new import3.InlineArray2(2,'style','float: right;'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n            ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_7,'input',new import3.InlineArray8(6,'id','quickFilterInput','placeholder','Type text to filter...','type','text'),(null as any));
    this._text_10 = this.renderer.createText(this._el_7,'\n            ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_7,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'Destroy Grid',(null as any));
    this._text_13 = this.renderer.createText(this._el_7,'\n            ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_7,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'Create Grid',(null as any));
    this._text_16 = this.renderer.createText(this._el_7,'\n        ',(null as any));
    this._text_17 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._el_18 = import3.createRenderElement(this.renderer,this._el_5,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_19 = this.renderer.createText(this._el_18,'\n            ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_18,'b',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_21 = this.renderer.createText(this._el_20,'Employees Skills and Contact Details',(null as any));
    this._text_22 = this.renderer.createText(this._el_18,'',(null as any));
    this._text_23 = this.renderer.createText(this._el_5,'\n    ',(null as any));
    this._text_24 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_25 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'style','clear: both;'),(null as any));
    this._text_26 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._anchor_27 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_27 = new import8.ViewContainer(27,0,this,this._anchor_27);
    this._TemplateRef_27_5 = new import10.TemplateRef_(this,27,this._anchor_27);
    this._NgIf_27_6 = new import9.Wrapper_NgIf(this._vc_27.vcRef,this._TemplateRef_27_5);
    this._text_28 = this.renderer.createText(this._el_0,'\n\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_9,new import3.InlineArray2(2,'keyup',(null as any)),this.eventHandler(this.handleEvent_9));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_11));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_14));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._text_22,
      this._text_23,
      this._text_24,
      this._el_25,
      this._text_26,
      this._anchor_27,
      this._text_28
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.TemplateRef) && (27 === requestNodeIndex))) { return this._TemplateRef_27_5; }
    if (((token === import11.NgIf) && (27 === requestNodeIndex))) { return this._NgIf_27_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_27_0_0:any = this.context.showGrid;
    this._NgIf_27_6.check_ngIf(currVal_27_0_0,throwOnChange,false);
    this._NgIf_27_6.ngDoCheck(this,this._anchor_27,throwOnChange);
    this._vc_27.detectChangesInNestedViews(throwOnChange);
    const currVal_32:boolean = !this.context.showGrid;
    if (import3.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      this.renderer.setElementProperty(this._el_11,'disabled',currVal_32);
      this._expr_32 = currVal_32;
    }
    const currVal_33:any = this.context.showGrid;
    if (import3.checkBinding(throwOnChange,this._expr_33,currVal_33)) {
      this.renderer.setElementProperty(this._el_14,'disabled',currVal_33);
      this._expr_33 = currVal_33;
    }
    const currVal_34:any = import3.inlineInterpolate(1,'\n            ',this.context.rowCount,'\n        ');
    if (import3.checkBinding(throwOnChange,this._expr_34,currVal_34)) {
      this.renderer.setText(this._text_22,currVal_34);
      this._expr_34 = currVal_34;
    }
  }
  destroyInternal():void {
    this._vc_27.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 27)) { return new View_RichGridComponent1(this.viewUtils,this,27,this._anchor_27,this._vc_27); }
    return (null as any);
  }
  handleEvent_9(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keyup')) {
      const pd_sub_0:any = ((<any>this.context.onQuickFilterChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>(this.context.showGrid = false)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>(this.context.showGrid = true)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_RichGridComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _el_16:any;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  _text_20:any;
  _text_21:any;
  _text_22:any;
  _text_23:any;
  _el_24:any;
  _text_25:any;
  _el_26:any;
  _text_27:any;
  _el_28:any;
  _text_29:any;
  _el_30:any;
  _text_31:any;
  _text_32:any;
  _el_33:any;
  _text_34:any;
  _text_35:any;
  _text_36:any;
  _el_37:any;
  _text_38:any;
  _el_39:any;
  /*private*/ _vc_39:import8.ViewContainer;
  compView_39:import1.AppView<import12.AgGridNg2>;
  _AgGridNg2_39_5:import13.Wrapper_AgGridNg2;
  _query_AgGridColumn_39_0:import14.QueryList<any>;
  _text_40:any;
  _text_41:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import8.ViewContainer) {
    super(View_RichGridComponent1,renderType_RichGridComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n\n        ',(null as any));
    this._text_2 = this.renderer.createText(this._el_0,'\n\n        ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray4(4,'class','toolbar','style','padding: 4px;'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n                Grid API:\n                ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'Select All',(null as any));
    this._text_9 = this.renderer.createText(this._el_5,'\n                ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_5,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'Clear Selection',(null as any));
    this._text_12 = this.renderer.createText(this._el_5,'\n            ',(null as any));
    this._text_13 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_3,'span',new import3.InlineArray2(2,'style','margin-left: 20px;'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'\n                Column API:\n                ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_14,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_17 = this.renderer.createText(this._el_16,'Hide Country Column',(null as any));
    this._text_18 = this.renderer.createText(this._el_14,'\n                ',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_14,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_20 = this.renderer.createText(this._el_19,'Show Country Column',(null as any));
    this._text_21 = this.renderer.createText(this._el_14,'\n            ',(null as any));
    this._text_22 = this.renderer.createText(this._el_3,'\n        ',(null as any));
    this._text_23 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'style','clear: both;'),(null as any));
    this._text_25 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_26 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray4(4,'class','toolbar','style','padding: 4px;'),(null as any));
    this._text_27 = this.renderer.createText(this._el_26,'\n            ',(null as any));
    this._el_28 = import3.createRenderElement(this.renderer,this._el_26,'label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_29 = this.renderer.createText(this._el_28,'\n                ',(null as any));
    this._el_30 = import3.createRenderElement(this.renderer,this._el_28,'input',new import3.InlineArray2(2,'type','checkbox'),(null as any));
    this._text_31 = this.renderer.createText(this._el_28,'\n                Show Tool Panel\n            ',(null as any));
    this._text_32 = this.renderer.createText(this._el_26,'\n            ',(null as any));
    this._el_33 = import3.createRenderElement(this.renderer,this._el_26,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_34 = this.renderer.createText(this._el_33,'Refresh Data',(null as any));
    this._text_35 = this.renderer.createText(this._el_26,'\n        ',(null as any));
    this._text_36 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_37 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'style','clear: both;'),(null as any));
    this._text_38 = this.renderer.createText(this._el_0,'\n\n        ',(null as any));
    this._el_39 = import3.createRenderElement(this.renderer,this._el_0,'ag-grid-ng2',new import3.InlineArrayDynamic(24,'class','ag-fresh','debug','','enableColResize','','enableFilter','','enableSorting','','groupHeaders','','rowHeight','22','rowSelection','multiple','style','width: 100%; height: 350px;','suppressRowClickSelection','','toolPanelSuppressGroups','','toolPanelSuppressValues',''),(null as any));
    this._vc_39 = new import8.ViewContainer(39,0,this,this._el_39);
    this.compView_39 = new import13.View_AgGridNg20(this.viewUtils,this,39,this._el_39);
    this._AgGridNg2_39_5 = new import13.Wrapper_AgGridNg2(new import15.ElementRef(this._el_39),this._vc_39.vcRef,this.parentView.parentView.injectorGet(import16.Ng2FrameworkFactory,this.parentView.parentIndex));
    this._query_AgGridColumn_39_0 = new import14.QueryList<any>();
    this._text_40 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.compView_39.create(this._AgGridNg2_39_5.context);
    this._text_41 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_7,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_7));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_10));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_16,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_16));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_19,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_19));
    var disposable_4:Function = import3.subscribeToRenderElement(this,this._el_30,new import3.InlineArray2(2,'change',(null as any)),this.eventHandler(this.handleEvent_30));
    var disposable_5:Function = import3.subscribeToRenderElement(this,this._el_33,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_33));
    var disposable_6:Function = import3.subscribeToRenderElement(this,this._el_39,new import3.InlineArrayDynamic(48,'modelUpdated',(null as any),'cellClicked',(null as any),'cellDoubleClicked',(null as any),'cellContextMenu',(null as any),'cellValueChanged',(null as any),'cellFocused',(null as any),'rowSelected',(null as any),'selectionChanged',(null as any),'beforeFilterChanged',(null as any),'afterFilterChanged',(null as any),'filterModified',(null as any),'beforeSortChanged',(null as any),'afterSortChanged',(null as any),'virtualRowRemoved',(null as any),'rowClicked',(null as any),'gridReady',(null as any),'columnEverythingChanged',(null as any),'columnRowGroupChanged',(null as any),'columnValueChanged',(null as any),'columnMoved',(null as any),'columnVisible',(null as any),'columnGroupOpened',(null as any),'columnResized',(null as any),'columnPinnedCountChanged',(null as any)),this.eventHandler(this.handleEvent_39));
    this._AgGridNg2_39_5.subscribe(this,this.eventHandler(this.handleEvent_39),true,true,false,false,true,false,false,true,true,true,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,false,false,false,false,false,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._text_21,
      this._text_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._el_26,
      this._text_27,
      this._el_28,
      this._text_29,
      this._el_30,
      this._text_31,
      this._text_32,
      this._el_33,
      this._text_34,
      this._text_35,
      this._text_36,
      this._el_37,
      this._text_38,
      this._el_39,
      this._text_40,
      this._text_41
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.AgGridNg2) && ((39 <= requestNodeIndex) && (requestNodeIndex <= 40)))) { return this._AgGridNg2_39_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_39_0_0:any = this.parentView.context.gridOptions;
    this._AgGridNg2_39_5.check_gridOptions(currVal_39_0_0,throwOnChange,false);
    const currVal_39_0_1:any = this.parentView.context.rowData;
    this._AgGridNg2_39_5.check_rowData(currVal_39_0_1,throwOnChange,false);
    const currVal_39_0_2:any = this.parentView.context.columnDefs;
    this._AgGridNg2_39_5.check_columnDefs(currVal_39_0_2,throwOnChange,false);
    const currVal_39_0_3:any = 'multiple';
    this._AgGridNg2_39_5.check_rowSelection(currVal_39_0_3,throwOnChange,false);
    const currVal_39_0_4:any = '22';
    this._AgGridNg2_39_5.check_rowHeight(currVal_39_0_4,throwOnChange,false);
    const currVal_39_0_5:any = '';
    this._AgGridNg2_39_5.check_toolPanelSuppressValues(currVal_39_0_5,throwOnChange,false);
    const currVal_39_0_6:any = '';
    this._AgGridNg2_39_5.check_suppressRowClickSelection(currVal_39_0_6,throwOnChange,false);
    const currVal_39_0_7:any = '';
    this._AgGridNg2_39_5.check_debug(currVal_39_0_7,throwOnChange,false);
    const currVal_39_0_8:any = '';
    this._AgGridNg2_39_5.check_enableColResize(currVal_39_0_8,throwOnChange,false);
    const currVal_39_0_9:any = '';
    this._AgGridNg2_39_5.check_enableSorting(currVal_39_0_9,throwOnChange,false);
    const currVal_39_0_10:any = '';
    this._AgGridNg2_39_5.check_enableFilter(currVal_39_0_10,throwOnChange,false);
    const currVal_39_0_11:any = this.parentView.context.showToolPanel;
    this._AgGridNg2_39_5.check_showToolPanel(currVal_39_0_11,throwOnChange,false);
    this._AgGridNg2_39_5.ngDoCheck(this,this._el_39,throwOnChange);
    this._vc_39.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) { if (this._query_AgGridColumn_39_0.dirty) {
      this._query_AgGridColumn_39_0.reset(([] as any[]));
      this._AgGridNg2_39_5.context.columns = this._query_AgGridColumn_39_0;
      this._query_AgGridColumn_39_0.notifyOnChanges();
    } }
    this.compView_39.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._AgGridNg2_39_5.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_39.destroyNestedViews();
    this.compView_39.destroy();
    this._AgGridNg2_39_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this._AgGridNg2_39_5.context.api.selectAll()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this._AgGridNg2_39_5.context.api.deselectAll()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_16(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this._AgGridNg2_39_5.context.columnApi.setColumnVisible('country',false)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_19(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this._AgGridNg2_39_5.context.columnApi.setColumnVisible('country',true)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_30(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.showToolPanel = $event.target.checked)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_33(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.createRowData()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_39(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'modelUpdated')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onModelUpdated()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'cellClicked')) {
      const pd_sub_1:any = ((<any>this.parentView.context.onCellClicked($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'cellDoubleClicked')) {
      const pd_sub_2:any = ((<any>this.parentView.context.onCellDoubleClicked($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'cellContextMenu')) {
      const pd_sub_3:any = ((<any>this.parentView.context.onCellContextMenu($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'cellValueChanged')) {
      const pd_sub_4:any = ((<any>this.parentView.context.onCellValueChanged($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'cellFocused')) {
      const pd_sub_5:any = ((<any>this.parentView.context.onCellFocused($event)) !== false);
      result = (pd_sub_5 && result);
    }
    if ((eventName == 'rowSelected')) {
      const pd_sub_6:any = ((<any>this.parentView.context.onRowSelected($event)) !== false);
      result = (pd_sub_6 && result);
    }
    if ((eventName == 'selectionChanged')) {
      const pd_sub_7:any = ((<any>this.parentView.context.onSelectionChanged()) !== false);
      result = (pd_sub_7 && result);
    }
    if ((eventName == 'beforeFilterChanged')) {
      const pd_sub_8:any = ((<any>this.parentView.context.onBeforeFilterChanged()) !== false);
      result = (pd_sub_8 && result);
    }
    if ((eventName == 'afterFilterChanged')) {
      const pd_sub_9:any = ((<any>this.parentView.context.onAfterFilterChanged()) !== false);
      result = (pd_sub_9 && result);
    }
    if ((eventName == 'filterModified')) {
      const pd_sub_10:any = ((<any>this.parentView.context.onFilterModified()) !== false);
      result = (pd_sub_10 && result);
    }
    if ((eventName == 'beforeSortChanged')) {
      const pd_sub_11:any = ((<any>this.parentView.context.onBeforeSortChanged()) !== false);
      result = (pd_sub_11 && result);
    }
    if ((eventName == 'afterSortChanged')) {
      const pd_sub_12:any = ((<any>this.parentView.context.onAfterSortChanged()) !== false);
      result = (pd_sub_12 && result);
    }
    if ((eventName == 'virtualRowRemoved')) {
      const pd_sub_13:any = ((<any>this.parentView.context.onVirtualRowRemoved($event)) !== false);
      result = (pd_sub_13 && result);
    }
    if ((eventName == 'rowClicked')) {
      const pd_sub_14:any = ((<any>this.parentView.context.onRowClicked($event)) !== false);
      result = (pd_sub_14 && result);
    }
    if ((eventName == 'gridReady')) {
      const pd_sub_15:any = ((<any>this.parentView.context.onReady($event)) !== false);
      result = (pd_sub_15 && result);
    }
    if ((eventName == 'columnEverythingChanged')) {
      const pd_sub_16:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_16 && result);
    }
    if ((eventName == 'columnRowGroupChanged')) {
      const pd_sub_17:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_17 && result);
    }
    if ((eventName == 'columnValueChanged')) {
      const pd_sub_18:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_18 && result);
    }
    if ((eventName == 'columnMoved')) {
      const pd_sub_19:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_19 && result);
    }
    if ((eventName == 'columnVisible')) {
      const pd_sub_20:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_20 && result);
    }
    if ((eventName == 'columnGroupOpened')) {
      const pd_sub_21:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_21 && result);
    }
    if ((eventName == 'columnResized')) {
      const pd_sub_22:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_22 && result);
    }
    if ((eventName == 'columnPinnedCountChanged')) {
      const pd_sub_23:any = ((<any>this.parentView.context.onColumnEvent($event)) !== false);
      result = (pd_sub_23 && result);
    }
    return result;
  }
}