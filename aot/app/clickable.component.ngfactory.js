/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../app/clickable.component');
var import1 = require('@angular/core/src/change_detection/change_detection');
var import2 = require('@angular/core/src/linker/view_utils');
var import3 = require('@angular/core/src/linker/view');
var import5 = require('@angular/core/src/linker/element');
var import7 = require('@angular/core/src/linker/view_type');
var import8 = require('@angular/core/src/metadata/view');
var import9 = require('@angular/core/src/linker/component_factory');
var Wrapper_ClickableComponent = (function () {
    function Wrapper_ClickableComponent() {
        this.changed = false;
        this.context = new import0.ClickableComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_ClickableComponent.prototype.check_cell = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this.changed = true;
            this.context.cell = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ClickableComponent.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    Wrapper_ClickableComponent.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_ClickableComponent;
}());
exports.Wrapper_ClickableComponent = Wrapper_ClickableComponent;
var renderType_ClickableComponent_Host = null;
var _View_ClickableComponent_Host0 = (function (_super) {
    __extends(_View_ClickableComponent_Host0, _super);
    function _View_ClickableComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ClickableComponent_Host0, renderType_ClickableComponent_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_ClickableComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer, 'ag-clickable', import2.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ClickableComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ClickableComponent_0_4 = new Wrapper_ClickableComponent();
        this._appEl_0.initComponent(this._ClickableComponent_0_4.context, [], compView_0);
        compView_0.create(this._ClickableComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_ClickableComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ClickableComponent) && (0 === requestNodeIndex))) {
            return this._ClickableComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_ClickableComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ClickableComponent_0_4.detectChangesInInputProps(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._ClickableComponent_0_4.detectChangesInHostProps(this, this._el_0, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ClickableComponent_Host0;
}(import3.AppView));
function viewFactory_ClickableComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ClickableComponent_Host === null)) {
        (renderType_ClickableComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_ClickableComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.ClickableComponentNgFactory = new import9.ComponentFactory('ag-clickable', viewFactory_ClickableComponent_Host0, import0.ClickableComponent);
var styles_ClickableComponent = [];
var renderType_ClickableComponent = null;
var _View_ClickableComponent0 = (function (_super) {
    __extends(_View_ClickableComponent0, _super);
    function _View_ClickableComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ClickableComponent0, renderType_ClickableComponent, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_ClickableComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import2.createRenderElement(this.renderer, parentRenderNode, 'button', import2.EMPTY_INLINE_ARRAY, null);
        this._text_2 = this.renderer.createText(this._el_1, 'Click Me', null);
        this._text_3 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = this.renderer.listen(this._el_1, 'click', this.eventHandler(this._handle_click_1_0.bind(this)));
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._text_3
        ], [disposable_0], []);
        return null;
    };
    _View_ClickableComponent0.prototype._handle_click_1_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_1_0 = (this.context.click() !== false);
        return (true && pd_1_0);
    };
    return _View_ClickableComponent0;
}(import3.AppView));
function viewFactory_ClickableComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ClickableComponent === null)) {
        (renderType_ClickableComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_ClickableComponent, {}));
    }
    return new _View_ClickableComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_ClickableComponent0 = viewFactory_ClickableComponent0;
//# sourceMappingURL=clickable.component.ngfactory.js.map