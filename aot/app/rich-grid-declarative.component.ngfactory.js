/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../app/rich-grid-declarative.component');
var import1 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/element');
var import4 = require('@angular/core/src/linker/view_utils');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/change_detection');
var import8 = require('@angular/core/src/metadata/view');
var import9 = require('@angular/core/src/linker/component_factory');
var import10 = require('../node_modules/@angular/common/src/directives/ng_if.ngfactory');
var import11 = require('@angular/core/src/linker/template_ref');
var import12 = require('@angular/common/src/directives/ng_if');
var import13 = require('../node_modules/ag-grid-ng2/lib/agGridNg2.ngfactory');
var import14 = require('@angular/core/src/linker/query_list');
var import15 = require('../node_modules/ag-grid-ng2/lib/agGridColumn.ngfactory');
var import16 = require('@angular/core/src/linker/element_ref');
var import17 = require('ag-grid-ng2/lib/ng2FrameworkFactory');
var import18 = require('ag-grid-ng2/lib/agGridColumn');
var import19 = require('ag-grid-ng2/lib/agGridNg2');
var Wrapper_RichGridDeclarativeComponent = (function () {
    function Wrapper_RichGridDeclarativeComponent() {
        this.changed = false;
        this.context = new import0.RichGridDeclarativeComponent();
    }
    Wrapper_RichGridDeclarativeComponent.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    Wrapper_RichGridDeclarativeComponent.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_RichGridDeclarativeComponent;
}());
exports.Wrapper_RichGridDeclarativeComponent = Wrapper_RichGridDeclarativeComponent;
var renderType_RichGridDeclarativeComponent_Host = null;
var _View_RichGridDeclarativeComponent_Host0 = (function (_super) {
    __extends(_View_RichGridDeclarativeComponent_Host0, _super);
    function _View_RichGridDeclarativeComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RichGridDeclarativeComponent_Host0, renderType_RichGridDeclarativeComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_RichGridDeclarativeComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer, 'ag-rich-grid-declarative', import4.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_RichGridDeclarativeComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._RichGridDeclarativeComponent_0_4 = new Wrapper_RichGridDeclarativeComponent();
        this._appEl_0.initComponent(this._RichGridDeclarativeComponent_0_4.context, [], compView_0);
        compView_0.create(this._RichGridDeclarativeComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_RichGridDeclarativeComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.RichGridDeclarativeComponent) && (0 === requestNodeIndex))) {
            return this._RichGridDeclarativeComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_RichGridDeclarativeComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._RichGridDeclarativeComponent_0_4.detectChangesInInputProps(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._RichGridDeclarativeComponent_0_4.detectChangesInHostProps(this, this._el_0, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_RichGridDeclarativeComponent_Host0;
}(import1.AppView));
function viewFactory_RichGridDeclarativeComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_RichGridDeclarativeComponent_Host === null)) {
        (renderType_RichGridDeclarativeComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_RichGridDeclarativeComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.RichGridDeclarativeComponentNgFactory = new import9.ComponentFactory('ag-rich-grid-declarative', viewFactory_RichGridDeclarativeComponent_Host0, import0.RichGridDeclarativeComponent);
var styles_RichGridDeclarativeComponent = ['.toolbar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {margin: 2px; padding: 0px;}'];
var renderType_RichGridDeclarativeComponent = null;
var _View_RichGridDeclarativeComponent0 = (function (_super) {
    __extends(_View_RichGridDeclarativeComponent0, _super);
    function _View_RichGridDeclarativeComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RichGridDeclarativeComponent0, renderType_RichGridDeclarativeComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
        this._expr_32 = import7.UNINITIALIZED;
        this._expr_33 = import7.UNINITIALIZED;
        this._expr_34 = import7.UNINITIALIZED;
    }
    _View_RichGridDeclarativeComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = import4.createRenderElement(this.renderer, parentRenderNode, 'div', new import4.InlineArray2(2, 'style', 'width: 800px;'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = import4.createRenderElement(this.renderer, this._el_0, 'h1', import4.EMPTY_INLINE_ARRAY, null);
        this._text_3 = this.renderer.createText(this._el_2, 'Rich Grid with Declarative Markup', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_5 = import4.createRenderElement(this.renderer, this._el_0, 'div', new import4.InlineArray2(2, 'style', 'padding: 4px;'), null);
        this._text_6 = this.renderer.createText(this._el_5, '\n        ', null);
        this._el_7 = import4.createRenderElement(this.renderer, this._el_5, 'div', new import4.InlineArray2(2, 'style', 'float: right;'), null);
        this._text_8 = this.renderer.createText(this._el_7, '\n            ', null);
        this._el_9 = import4.createRenderElement(this.renderer, this._el_7, 'input', new import4.InlineArray8(6, 'id', 'quickFilterInput', 'placeholder', 'Type text to filter...', 'type', 'text'), null);
        this._text_10 = this.renderer.createText(this._el_7, '\n            ', null);
        this._el_11 = import4.createRenderElement(this.renderer, this._el_7, 'button', import4.EMPTY_INLINE_ARRAY, null);
        this._text_12 = this.renderer.createText(this._el_11, 'Destroy Grid', null);
        this._text_13 = this.renderer.createText(this._el_7, '\n            ', null);
        this._el_14 = import4.createRenderElement(this.renderer, this._el_7, 'button', import4.EMPTY_INLINE_ARRAY, null);
        this._text_15 = this.renderer.createText(this._el_14, 'Create Grid', null);
        this._text_16 = this.renderer.createText(this._el_7, '\n        ', null);
        this._text_17 = this.renderer.createText(this._el_5, '\n        ', null);
        this._el_18 = import4.createRenderElement(this.renderer, this._el_5, 'div', import4.EMPTY_INLINE_ARRAY, null);
        this._text_19 = this.renderer.createText(this._el_18, '\n            ', null);
        this._el_20 = import4.createRenderElement(this.renderer, this._el_18, 'b', import4.EMPTY_INLINE_ARRAY, null);
        this._text_21 = this.renderer.createText(this._el_20, 'Employees Skills and Contact Details', null);
        this._text_22 = this.renderer.createText(this._el_18, '', null);
        this._text_23 = this.renderer.createText(this._el_5, '\n    ', null);
        this._text_24 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_25 = import4.createRenderElement(this.renderer, this._el_0, 'div', new import4.InlineArray2(2, 'style', 'clear: both;'), null);
        this._text_26 = this.renderer.createText(this._el_0, '\n\n    ', null);
        this._anchor_27 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_27 = new import3.AppElement(27, 0, this, this._anchor_27);
        this._TemplateRef_27_5 = new import11.TemplateRef_(this._appEl_27, viewFactory_RichGridDeclarativeComponent1);
        this._NgIf_27_6 = new import10.Wrapper_NgIf(this._appEl_27.vcRef, this._TemplateRef_27_5);
        this._text_28 = this.renderer.createText(this._el_0, '\n', null);
        var disposable_0 = this.renderer.listen(this._el_9, 'keyup', this.eventHandler(this._handle_keyup_9_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_11, 'click', this.eventHandler(this._handle_click_11_0.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_14, 'click', this.eventHandler(this._handle_click_14_0.bind(this)));
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._text_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._text_22,
            this._text_23,
            this._text_24,
            this._el_25,
            this._text_26,
            this._anchor_27,
            this._text_28
        ], [
            disposable_0,
            disposable_1,
            disposable_2
        ], []);
        return null;
    };
    _View_RichGridDeclarativeComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (27 === requestNodeIndex))) {
            return this._TemplateRef_27_5;
        }
        if (((token === import12.NgIf) && (27 === requestNodeIndex))) {
            return this._NgIf_27_6.context;
        }
        return notFoundResult;
    };
    _View_RichGridDeclarativeComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_27_0_0 = this.context.showGrid;
        this._NgIf_27_6.check_ngIf(currVal_27_0_0, throwOnChange, false);
        this._NgIf_27_6.detectChangesInInputProps(this, this._anchor_27, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_32 = !this.context.showGrid;
        if (import4.checkBinding(throwOnChange, this._expr_32, currVal_32)) {
            this.renderer.setElementProperty(this._el_11, 'disabled', currVal_32);
            this._expr_32 = currVal_32;
        }
        var currVal_33 = this.context.showGrid;
        if (import4.checkBinding(throwOnChange, this._expr_33, currVal_33)) {
            this.renderer.setElementProperty(this._el_14, 'disabled', currVal_33);
            this._expr_33 = currVal_33;
        }
        var currVal_34 = import4.interpolate(1, '\n            ', this.context.rowCount, '\n        ');
        if (import4.checkBinding(throwOnChange, this._expr_34, currVal_34)) {
            this.renderer.setText(this._text_22, currVal_34);
            this._expr_34 = currVal_34;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_RichGridDeclarativeComponent0.prototype._handle_keyup_9_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_9_0 = (this.context.onQuickFilterChanged($event) !== false);
        return (true && pd_9_0);
    };
    _View_RichGridDeclarativeComponent0.prototype._handle_click_11_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_11_0 = ((this.context.showGrid = false) !== false);
        return (true && pd_11_0);
    };
    _View_RichGridDeclarativeComponent0.prototype._handle_click_14_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_14_0 = ((this.context.showGrid = true) !== false);
        return (true && pd_14_0);
    };
    return _View_RichGridDeclarativeComponent0;
}(import1.AppView));
function viewFactory_RichGridDeclarativeComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_RichGridDeclarativeComponent === null)) {
        (renderType_RichGridDeclarativeComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.Emulated, styles_RichGridDeclarativeComponent, {}));
    }
    return new _View_RichGridDeclarativeComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_RichGridDeclarativeComponent0 = viewFactory_RichGridDeclarativeComponent0;
var _View_RichGridDeclarativeComponent1 = (function (_super) {
    __extends(_View_RichGridDeclarativeComponent1, _super);
    function _View_RichGridDeclarativeComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RichGridDeclarativeComponent1, renderType_RichGridDeclarativeComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_RichGridDeclarativeComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.createRenderElement(this.renderer, null, 'div', import4.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n\n        ', null);
        this._text_2 = this.renderer.createText(this._el_0, '\n\n        ', null);
        this._el_3 = import4.createRenderElement(this.renderer, this._el_0, 'div', new import4.InlineArray4(4, 'class', 'toolbar', 'style', 'padding: 4px;'), null);
        this._text_4 = this.renderer.createText(this._el_3, '\n            ', null);
        this._el_5 = import4.createRenderElement(this.renderer, this._el_3, 'span', import4.EMPTY_INLINE_ARRAY, null);
        this._text_6 = this.renderer.createText(this._el_5, '\n                Grid API:\n                ', null);
        this._el_7 = import4.createRenderElement(this.renderer, this._el_5, 'button', import4.EMPTY_INLINE_ARRAY, null);
        this._text_8 = this.renderer.createText(this._el_7, 'Select All', null);
        this._text_9 = this.renderer.createText(this._el_5, '\n                ', null);
        this._el_10 = import4.createRenderElement(this.renderer, this._el_5, 'button', import4.EMPTY_INLINE_ARRAY, null);
        this._text_11 = this.renderer.createText(this._el_10, 'Clear Selection', null);
        this._text_12 = this.renderer.createText(this._el_5, '\n            ', null);
        this._text_13 = this.renderer.createText(this._el_3, '\n            ', null);
        this._el_14 = import4.createRenderElement(this.renderer, this._el_3, 'span', new import4.InlineArray2(2, 'style', 'margin-left: 20px;'), null);
        this._text_15 = this.renderer.createText(this._el_14, '\n                Column API:\n                ', null);
        this._el_16 = import4.createRenderElement(this.renderer, this._el_14, 'button', import4.EMPTY_INLINE_ARRAY, null);
        this._text_17 = this.renderer.createText(this._el_16, 'Hide Country Column', null);
        this._text_18 = this.renderer.createText(this._el_14, '\n                ', null);
        this._el_19 = import4.createRenderElement(this.renderer, this._el_14, 'button', import4.EMPTY_INLINE_ARRAY, null);
        this._text_20 = this.renderer.createText(this._el_19, 'Show Country Column', null);
        this._text_21 = this.renderer.createText(this._el_14, '\n            ', null);
        this._text_22 = this.renderer.createText(this._el_3, '\n        ', null);
        this._text_23 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_24 = import4.createRenderElement(this.renderer, this._el_0, 'div', new import4.InlineArray2(2, 'style', 'clear: both;'), null);
        this._text_25 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_26 = import4.createRenderElement(this.renderer, this._el_0, 'div', new import4.InlineArray4(4, 'class', 'toolbar', 'style', 'padding: 4px;'), null);
        this._text_27 = this.renderer.createText(this._el_26, '\n            ', null);
        this._el_28 = import4.createRenderElement(this.renderer, this._el_26, 'label', import4.EMPTY_INLINE_ARRAY, null);
        this._text_29 = this.renderer.createText(this._el_28, '\n                ', null);
        this._el_30 = import4.createRenderElement(this.renderer, this._el_28, 'input', new import4.InlineArray2(2, 'type', 'checkbox'), null);
        this._text_31 = this.renderer.createText(this._el_28, '\n                Show Tool Panel\n            ', null);
        this._text_32 = this.renderer.createText(this._el_26, '\n            ', null);
        this._el_33 = import4.createRenderElement(this.renderer, this._el_26, 'button', import4.EMPTY_INLINE_ARRAY, null);
        this._text_34 = this.renderer.createText(this._el_33, 'Refresh Data', null);
        this._text_35 = this.renderer.createText(this._el_26, '\n        ', null);
        this._text_36 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_37 = import4.createRenderElement(this.renderer, this._el_0, 'div', new import4.InlineArray2(2, 'style', 'clear: both;'), null);
        this._text_38 = this.renderer.createText(this._el_0, '\n\n        ', null);
        this._el_39 = import4.createRenderElement(this.renderer, this._el_0, 'ag-grid-ng2', new import4.InlineArrayDynamic(22, 'class', 'ag-fresh', 'enableColResize', '', 'enableFilter', '', 'enableSorting', '', 'groupHeaders', '', 'rowHeight', '22', 'rowSelection', 'multiple', 'style', 'width: 100%; height: 350px;', 'suppressRowClickSelection', '', 'toolPanelSuppressGroups', '', 'toolPanelSuppressValues', ''), null);
        this._appEl_39 = new import3.AppElement(39, 0, this, this._el_39);
        var compView_39 = import13.viewFactory_AgGridNg20(this.viewUtils, this.injector(39), this._appEl_39);
        this._AgGridNg2_39_5 = new import13.Wrapper_AgGridNg2(new import16.ElementRef(this._el_39), this._appEl_39.vcRef, this.parent.parentInjector.get(import17.Ng2FrameworkFactory));
        this._query_AgGridColumn_39_0 = new import14.QueryList();
        this._appEl_39.initComponent(this._AgGridNg2_39_5.context, [], compView_39);
        this._text_40 = this.renderer.createText(null, '\n            ', null);
        this._el_41 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray2(2, 'headerName', 'Employee'), null);
        this._appEl_41 = new import3.AppElement(41, 39, this, this._el_41);
        var compView_41 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(41), this._appEl_41);
        this._AgGridColumn_41_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_41_0 = new import14.QueryList();
        this._appEl_41.initComponent(this._AgGridColumn_41_4.context, [], compView_41);
        this._text_42 = this.renderer.createText(null, '\n                ', null);
        this._el_43 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray2(2, 'headerName', '#'), null);
        this._appEl_43 = new import3.AppElement(43, 41, this, this._el_43);
        var compView_43 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(43), this._appEl_43);
        this._AgGridColumn_43_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_43_0 = new import14.QueryList();
        this._appEl_43.initComponent(this._AgGridColumn_43_4.context, [], compView_43);
        compView_43.create(this._AgGridColumn_43_4.context, [], null);
        this._text_44 = this.renderer.createText(null, '\n                ', null);
        this._el_45 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray4(4, 'field', 'name', 'headerName', 'Name'), null);
        this._appEl_45 = new import3.AppElement(45, 41, this, this._el_45);
        var compView_45 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(45), this._appEl_45);
        this._AgGridColumn_45_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_45_0 = new import14.QueryList();
        this._appEl_45.initComponent(this._AgGridColumn_45_4.context, [], compView_45);
        compView_45.create(this._AgGridColumn_45_4.context, [], null);
        this._text_46 = this.renderer.createText(null, '\n                ', null);
        this._el_47 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray4(4, 'field', 'country', 'headerName', 'Country'), null);
        this._appEl_47 = new import3.AppElement(47, 41, this, this._el_47);
        var compView_47 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(47), this._appEl_47);
        this._AgGridColumn_47_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_47_0 = new import14.QueryList();
        this._appEl_47.initComponent(this._AgGridColumn_47_4.context, [], compView_47);
        compView_47.create(this._AgGridColumn_47_4.context, [], null);
        this._text_48 = this.renderer.createText(null, '\n            ', null);
        compView_41.create(this._AgGridColumn_41_4.context, [], null);
        this._text_49 = this.renderer.createText(null, '\n            ', null);
        this._el_50 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray2(2, 'headerName', 'IT Skills'), null);
        this._appEl_50 = new import3.AppElement(50, 39, this, this._el_50);
        var compView_50 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(50), this._appEl_50);
        this._AgGridColumn_50_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_50_0 = new import14.QueryList();
        this._appEl_50.initComponent(this._AgGridColumn_50_4.context, [], compView_50);
        this._text_51 = this.renderer.createText(null, '\n                ', null);
        this._el_52 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray2(2, 'headerName', 'Skills'), null);
        this._appEl_52 = new import3.AppElement(52, 50, this, this._el_52);
        var compView_52 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(52), this._appEl_52);
        this._AgGridColumn_52_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_52_0 = new import14.QueryList();
        this._appEl_52.initComponent(this._AgGridColumn_52_4.context, [], compView_52);
        compView_52.create(this._AgGridColumn_52_4.context, [], null);
        this._text_53 = this.renderer.createText(null, '\n                ', null);
        this._el_54 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray4(4, 'field', 'proficiency', 'headerName', 'Proficiency'), null);
        this._appEl_54 = new import3.AppElement(54, 50, this, this._el_54);
        var compView_54 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(54), this._appEl_54);
        this._AgGridColumn_54_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_54_0 = new import14.QueryList();
        this._appEl_54.initComponent(this._AgGridColumn_54_4.context, [], compView_54);
        compView_54.create(this._AgGridColumn_54_4.context, [], null);
        this._text_55 = this.renderer.createText(null, '\n            ', null);
        compView_50.create(this._AgGridColumn_50_4.context, [], null);
        this._text_56 = this.renderer.createText(null, '\n            ', null);
        this._el_57 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray2(2, 'headerName', 'Contact'), null);
        this._appEl_57 = new import3.AppElement(57, 39, this, this._el_57);
        var compView_57 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(57), this._appEl_57);
        this._AgGridColumn_57_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_57_0 = new import14.QueryList();
        this._appEl_57.initComponent(this._AgGridColumn_57_4.context, [], compView_57);
        this._text_58 = this.renderer.createText(null, '\n                ', null);
        this._el_59 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray8(6, 'field', 'mobile', 'filter', 'text', 'headerName', 'Mobile'), null);
        this._appEl_59 = new import3.AppElement(59, 57, this, this._el_59);
        var compView_59 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(59), this._appEl_59);
        this._AgGridColumn_59_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_59_0 = new import14.QueryList();
        this._appEl_59.initComponent(this._AgGridColumn_59_4.context, [], compView_59);
        compView_59.create(this._AgGridColumn_59_4.context, [], null);
        this._text_60 = this.renderer.createText(null, '\n                ', null);
        this._el_61 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray8(6, 'field', 'landline', 'filter', 'text', 'headerName', 'Land-line'), null);
        this._appEl_61 = new import3.AppElement(61, 57, this, this._el_61);
        var compView_61 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(61), this._appEl_61);
        this._AgGridColumn_61_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_61_0 = new import14.QueryList();
        this._appEl_61.initComponent(this._AgGridColumn_61_4.context, [], compView_61);
        compView_61.create(this._AgGridColumn_61_4.context, [], null);
        this._text_62 = this.renderer.createText(null, '\n                ', null);
        this._el_63 = import4.createRenderElement(this.renderer, null, 'ag-grid-column', new import4.InlineArray8(6, 'field', 'address', 'filter', 'text', 'headerName', 'Address'), null);
        this._appEl_63 = new import3.AppElement(63, 57, this, this._el_63);
        var compView_63 = import15.viewFactory_AgGridColumn0(this.viewUtils, this.injector(63), this._appEl_63);
        this._AgGridColumn_63_4 = new import15.Wrapper_AgGridColumn();
        this._query_AgGridColumn_63_0 = new import14.QueryList();
        this._appEl_63.initComponent(this._AgGridColumn_63_4.context, [], compView_63);
        compView_63.create(this._AgGridColumn_63_4.context, [], null);
        this._text_64 = this.renderer.createText(null, '\n            ', null);
        compView_57.create(this._AgGridColumn_57_4.context, [], null);
        this._text_65 = this.renderer.createText(null, '\n        ', null);
        compView_39.create(this._AgGridNg2_39_5.context, [], null);
        this._text_66 = this.renderer.createText(this._el_0, '\n    ', null);
        var disposable_0 = this.renderer.listen(this._el_7, 'click', this.eventHandler(this._handle_click_7_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_10, 'click', this.eventHandler(this._handle_click_10_0.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_16, 'click', this.eventHandler(this._handle_click_16_0.bind(this)));
        var disposable_3 = this.renderer.listen(this._el_19, 'click', this.eventHandler(this._handle_click_19_0.bind(this)));
        var disposable_4 = this.renderer.listen(this._el_30, 'change', this.eventHandler(this._handle_change_30_0.bind(this)));
        var disposable_5 = this.renderer.listen(this._el_33, 'click', this.eventHandler(this._handle_click_33_0.bind(this)));
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._text_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._text_18,
            this._el_19,
            this._text_20,
            this._text_21,
            this._text_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._el_26,
            this._text_27,
            this._el_28,
            this._text_29,
            this._el_30,
            this._text_31,
            this._text_32,
            this._el_33,
            this._text_34,
            this._text_35,
            this._text_36,
            this._el_37,
            this._text_38,
            this._el_39,
            this._text_40,
            this._el_41,
            this._text_42,
            this._el_43,
            this._text_44,
            this._el_45,
            this._text_46,
            this._el_47,
            this._text_48,
            this._text_49,
            this._el_50,
            this._text_51,
            this._el_52,
            this._text_53,
            this._el_54,
            this._text_55,
            this._text_56,
            this._el_57,
            this._text_58,
            this._el_59,
            this._text_60,
            this._el_61,
            this._text_62,
            this._el_63,
            this._text_64,
            this._text_65,
            this._text_66
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5
        ], []);
        return null;
    };
    _View_RichGridDeclarativeComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.AgGridColumn) && (43 === requestNodeIndex))) {
            return this._AgGridColumn_43_4.context;
        }
        if (((token === import18.AgGridColumn) && (45 === requestNodeIndex))) {
            return this._AgGridColumn_45_4.context;
        }
        if (((token === import18.AgGridColumn) && (47 === requestNodeIndex))) {
            return this._AgGridColumn_47_4.context;
        }
        if (((token === import18.AgGridColumn) && ((41 <= requestNodeIndex) && (requestNodeIndex <= 48)))) {
            return this._AgGridColumn_41_4.context;
        }
        if (((token === import18.AgGridColumn) && (52 === requestNodeIndex))) {
            return this._AgGridColumn_52_4.context;
        }
        if (((token === import18.AgGridColumn) && (54 === requestNodeIndex))) {
            return this._AgGridColumn_54_4.context;
        }
        if (((token === import18.AgGridColumn) && ((50 <= requestNodeIndex) && (requestNodeIndex <= 55)))) {
            return this._AgGridColumn_50_4.context;
        }
        if (((token === import18.AgGridColumn) && (59 === requestNodeIndex))) {
            return this._AgGridColumn_59_4.context;
        }
        if (((token === import18.AgGridColumn) && (61 === requestNodeIndex))) {
            return this._AgGridColumn_61_4.context;
        }
        if (((token === import18.AgGridColumn) && (63 === requestNodeIndex))) {
            return this._AgGridColumn_63_4.context;
        }
        if (((token === import18.AgGridColumn) && ((57 <= requestNodeIndex) && (requestNodeIndex <= 64)))) {
            return this._AgGridColumn_57_4.context;
        }
        if (((token === import19.AgGridNg2) && ((39 <= requestNodeIndex) && (requestNodeIndex <= 65)))) {
            return this._AgGridNg2_39_5.context;
        }
        return notFoundResult;
    };
    _View_RichGridDeclarativeComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_39_0_0 = this.parent.context.gridOptions;
        this._AgGridNg2_39_5.check_gridOptions(currVal_39_0_0, throwOnChange, false);
        var currVal_39_0_1 = this.parent.context.rowData;
        this._AgGridNg2_39_5.check_rowData(currVal_39_0_1, throwOnChange, false);
        var currVal_39_0_2 = 'multiple';
        this._AgGridNg2_39_5.check_rowSelection(currVal_39_0_2, throwOnChange, false);
        var currVal_39_0_3 = '22';
        this._AgGridNg2_39_5.check_rowHeight(currVal_39_0_3, throwOnChange, false);
        var currVal_39_0_4 = '';
        this._AgGridNg2_39_5.check_toolPanelSuppressValues(currVal_39_0_4, throwOnChange, false);
        var currVal_39_0_5 = '';
        this._AgGridNg2_39_5.check_suppressRowClickSelection(currVal_39_0_5, throwOnChange, false);
        var currVal_39_0_6 = '';
        this._AgGridNg2_39_5.check_enableColResize(currVal_39_0_6, throwOnChange, false);
        var currVal_39_0_7 = '';
        this._AgGridNg2_39_5.check_enableSorting(currVal_39_0_7, throwOnChange, false);
        var currVal_39_0_8 = '';
        this._AgGridNg2_39_5.check_enableFilter(currVal_39_0_8, throwOnChange, false);
        var currVal_39_0_9 = this.parent.context.showToolPanel;
        this._AgGridNg2_39_5.check_showToolPanel(currVal_39_0_9, throwOnChange, false);
        this._AgGridNg2_39_5.detectChangesInInputProps(this, this._el_39, throwOnChange);
        var currVal_41_0_0 = 'Employee';
        this._AgGridColumn_41_4.check_headerName(currVal_41_0_0, throwOnChange, false);
        this._AgGridColumn_41_4.detectChangesInInputProps(this, this._el_41, throwOnChange);
        var currVal_43_0_0 = true;
        this._AgGridColumn_43_4.check_pinned(currVal_43_0_0, throwOnChange, false);
        var currVal_43_0_1 = 30;
        this._AgGridColumn_43_4.check_width(currVal_43_0_1, throwOnChange, false);
        var currVal_43_0_2 = true;
        this._AgGridColumn_43_4.check_checkboxSelection(currVal_43_0_2, throwOnChange, false);
        var currVal_43_0_3 = true;
        this._AgGridColumn_43_4.check_suppressMenu(currVal_43_0_3, throwOnChange, false);
        var currVal_43_0_4 = true;
        this._AgGridColumn_43_4.check_suppressSorting(currVal_43_0_4, throwOnChange, false);
        var currVal_43_0_5 = '#';
        this._AgGridColumn_43_4.check_headerName(currVal_43_0_5, throwOnChange, false);
        this._AgGridColumn_43_4.detectChangesInInputProps(this, this._el_43, throwOnChange);
        var currVal_45_0_0 = 'name';
        this._AgGridColumn_45_4.check_field(currVal_45_0_0, throwOnChange, false);
        var currVal_45_0_1 = true;
        this._AgGridColumn_45_4.check_pinned(currVal_45_0_1, throwOnChange, false);
        var currVal_45_0_2 = 150;
        this._AgGridColumn_45_4.check_width(currVal_45_0_2, throwOnChange, false);
        var currVal_45_0_3 = 'Name';
        this._AgGridColumn_45_4.check_headerName(currVal_45_0_3, throwOnChange, false);
        this._AgGridColumn_45_4.detectChangesInInputProps(this, this._el_45, throwOnChange);
        var currVal_47_0_0 = 'country';
        this._AgGridColumn_47_4.check_field(currVal_47_0_0, throwOnChange, false);
        var currVal_47_0_1 = true;
        this._AgGridColumn_47_4.check_pinned(currVal_47_0_1, throwOnChange, false);
        var currVal_47_0_2 = 150;
        this._AgGridColumn_47_4.check_width(currVal_47_0_2, throwOnChange, false);
        var currVal_47_0_3 = this.parent.context.countryCellRenderer;
        this._AgGridColumn_47_4.check_cellRenderer(currVal_47_0_3, throwOnChange, false);
        var currVal_47_0_4 = this.parent.context.getCountryFilterParams();
        this._AgGridColumn_47_4.check_filterParams(currVal_47_0_4, throwOnChange, false);
        var currVal_47_0_5 = 'Country';
        this._AgGridColumn_47_4.check_headerName(currVal_47_0_5, throwOnChange, false);
        this._AgGridColumn_47_4.detectChangesInInputProps(this, this._el_47, throwOnChange);
        var currVal_50_0_0 = 'IT Skills';
        this._AgGridColumn_50_4.check_headerName(currVal_50_0_0, throwOnChange, false);
        this._AgGridColumn_50_4.detectChangesInInputProps(this, this._el_50, throwOnChange);
        var currVal_52_0_0 = 125;
        this._AgGridColumn_52_4.check_width(currVal_52_0_0, throwOnChange, false);
        var currVal_52_0_1 = this.parent.context.skillsCellRenderer;
        this._AgGridColumn_52_4.check_cellRenderer(currVal_52_0_1, throwOnChange, false);
        var currVal_52_0_2 = true;
        this._AgGridColumn_52_4.check_suppressSorting(currVal_52_0_2, throwOnChange, false);
        var currVal_52_0_3 = this.parent.context.getSkillFilter();
        this._AgGridColumn_52_4.check_filter(currVal_52_0_3, throwOnChange, false);
        var currVal_52_0_4 = 'Skills';
        this._AgGridColumn_52_4.check_headerName(currVal_52_0_4, throwOnChange, false);
        this._AgGridColumn_52_4.detectChangesInInputProps(this, this._el_52, throwOnChange);
        var currVal_54_0_0 = 'proficiency';
        this._AgGridColumn_54_4.check_field(currVal_54_0_0, throwOnChange, false);
        var currVal_54_0_1 = 120;
        this._AgGridColumn_54_4.check_width(currVal_54_0_1, throwOnChange, false);
        var currVal_54_0_2 = this.parent.context.percentCellRenderer;
        this._AgGridColumn_54_4.check_cellRenderer(currVal_54_0_2, throwOnChange, false);
        var currVal_54_0_3 = this.parent.context.getProficiencyFilter();
        this._AgGridColumn_54_4.check_filter(currVal_54_0_3, throwOnChange, false);
        var currVal_54_0_4 = 'Proficiency';
        this._AgGridColumn_54_4.check_headerName(currVal_54_0_4, throwOnChange, false);
        this._AgGridColumn_54_4.detectChangesInInputProps(this, this._el_54, throwOnChange);
        var currVal_57_0_0 = 'Contact';
        this._AgGridColumn_57_4.check_headerName(currVal_57_0_0, throwOnChange, false);
        this._AgGridColumn_57_4.detectChangesInInputProps(this, this._el_57, throwOnChange);
        var currVal_59_0_0 = 'mobile';
        this._AgGridColumn_59_4.check_field(currVal_59_0_0, throwOnChange, false);
        var currVal_59_0_1 = 150;
        this._AgGridColumn_59_4.check_width(currVal_59_0_1, throwOnChange, false);
        var currVal_59_0_2 = 'text';
        this._AgGridColumn_59_4.check_filter(currVal_59_0_2, throwOnChange, false);
        var currVal_59_0_3 = 'Mobile';
        this._AgGridColumn_59_4.check_headerName(currVal_59_0_3, throwOnChange, false);
        this._AgGridColumn_59_4.detectChangesInInputProps(this, this._el_59, throwOnChange);
        var currVal_61_0_0 = 'landline';
        this._AgGridColumn_61_4.check_field(currVal_61_0_0, throwOnChange, false);
        var currVal_61_0_1 = 150;
        this._AgGridColumn_61_4.check_width(currVal_61_0_1, throwOnChange, false);
        var currVal_61_0_2 = 'text';
        this._AgGridColumn_61_4.check_filter(currVal_61_0_2, throwOnChange, false);
        var currVal_61_0_3 = 'Land-line';
        this._AgGridColumn_61_4.check_headerName(currVal_61_0_3, throwOnChange, false);
        this._AgGridColumn_61_4.detectChangesInInputProps(this, this._el_61, throwOnChange);
        var currVal_63_0_0 = 'address';
        this._AgGridColumn_63_4.check_field(currVal_63_0_0, throwOnChange, false);
        var currVal_63_0_1 = 500;
        this._AgGridColumn_63_4.check_width(currVal_63_0_1, throwOnChange, false);
        var currVal_63_0_2 = 'text';
        this._AgGridColumn_63_4.check_filter(currVal_63_0_2, throwOnChange, false);
        var currVal_63_0_3 = 'Address';
        this._AgGridColumn_63_4.check_headerName(currVal_63_0_3, throwOnChange, false);
        this._AgGridColumn_63_4.detectChangesInInputProps(this, this._el_63, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_AgGridColumn_43_0.dirty) {
                this._query_AgGridColumn_43_0.reset([this._AgGridColumn_43_4.context]);
                this._AgGridColumn_43_4.context.childColumns = this._query_AgGridColumn_43_0;
                this._query_AgGridColumn_43_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_45_0.dirty) {
                this._query_AgGridColumn_45_0.reset([this._AgGridColumn_45_4.context]);
                this._AgGridColumn_45_4.context.childColumns = this._query_AgGridColumn_45_0;
                this._query_AgGridColumn_45_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_47_0.dirty) {
                this._query_AgGridColumn_47_0.reset([this._AgGridColumn_47_4.context]);
                this._AgGridColumn_47_4.context.childColumns = this._query_AgGridColumn_47_0;
                this._query_AgGridColumn_47_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_41_0.dirty) {
                this._query_AgGridColumn_41_0.reset([
                    this._AgGridColumn_41_4.context,
                    this._AgGridColumn_43_4.context,
                    this._AgGridColumn_45_4.context,
                    this._AgGridColumn_47_4.context
                ]);
                this._AgGridColumn_41_4.context.childColumns = this._query_AgGridColumn_41_0;
                this._query_AgGridColumn_41_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_52_0.dirty) {
                this._query_AgGridColumn_52_0.reset([this._AgGridColumn_52_4.context]);
                this._AgGridColumn_52_4.context.childColumns = this._query_AgGridColumn_52_0;
                this._query_AgGridColumn_52_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_54_0.dirty) {
                this._query_AgGridColumn_54_0.reset([this._AgGridColumn_54_4.context]);
                this._AgGridColumn_54_4.context.childColumns = this._query_AgGridColumn_54_0;
                this._query_AgGridColumn_54_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_50_0.dirty) {
                this._query_AgGridColumn_50_0.reset([
                    this._AgGridColumn_50_4.context,
                    this._AgGridColumn_52_4.context,
                    this._AgGridColumn_54_4.context
                ]);
                this._AgGridColumn_50_4.context.childColumns = this._query_AgGridColumn_50_0;
                this._query_AgGridColumn_50_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_59_0.dirty) {
                this._query_AgGridColumn_59_0.reset([this._AgGridColumn_59_4.context]);
                this._AgGridColumn_59_4.context.childColumns = this._query_AgGridColumn_59_0;
                this._query_AgGridColumn_59_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_61_0.dirty) {
                this._query_AgGridColumn_61_0.reset([this._AgGridColumn_61_4.context]);
                this._AgGridColumn_61_4.context.childColumns = this._query_AgGridColumn_61_0;
                this._query_AgGridColumn_61_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_63_0.dirty) {
                this._query_AgGridColumn_63_0.reset([this._AgGridColumn_63_4.context]);
                this._AgGridColumn_63_4.context.childColumns = this._query_AgGridColumn_63_0;
                this._query_AgGridColumn_63_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_57_0.dirty) {
                this._query_AgGridColumn_57_0.reset([
                    this._AgGridColumn_57_4.context,
                    this._AgGridColumn_59_4.context,
                    this._AgGridColumn_61_4.context,
                    this._AgGridColumn_63_4.context
                ]);
                this._AgGridColumn_57_4.context.childColumns = this._query_AgGridColumn_57_0;
                this._query_AgGridColumn_57_0.notifyOnChanges();
            }
            if (this._query_AgGridColumn_39_0.dirty) {
                this._query_AgGridColumn_39_0.reset([
                    this._AgGridColumn_41_4.context,
                    this._AgGridColumn_50_4.context,
                    this._AgGridColumn_57_4.context
                ]);
                this._AgGridNg2_39_5.context.columns = this._query_AgGridColumn_39_0;
                this._query_AgGridColumn_39_0.notifyOnChanges();
            }
        }
        this._AgGridNg2_39_5.detectChangesInHostProps(this, this._el_39, throwOnChange);
        this._AgGridColumn_41_4.detectChangesInHostProps(this, this._el_41, throwOnChange);
        this._AgGridColumn_43_4.detectChangesInHostProps(this, this._el_43, throwOnChange);
        this._AgGridColumn_45_4.detectChangesInHostProps(this, this._el_45, throwOnChange);
        this._AgGridColumn_47_4.detectChangesInHostProps(this, this._el_47, throwOnChange);
        this._AgGridColumn_50_4.detectChangesInHostProps(this, this._el_50, throwOnChange);
        this._AgGridColumn_52_4.detectChangesInHostProps(this, this._el_52, throwOnChange);
        this._AgGridColumn_54_4.detectChangesInHostProps(this, this._el_54, throwOnChange);
        this._AgGridColumn_57_4.detectChangesInHostProps(this, this._el_57, throwOnChange);
        this._AgGridColumn_59_4.detectChangesInHostProps(this, this._el_59, throwOnChange);
        this._AgGridColumn_61_4.detectChangesInHostProps(this, this._el_61, throwOnChange);
        this._AgGridColumn_63_4.detectChangesInHostProps(this, this._el_63, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._AgGridNg2_39_5.context.ngAfterViewInit();
            }
        }
    };
    _View_RichGridDeclarativeComponent1.prototype.destroyInternal = function () {
        this._AgGridNg2_39_5.context.ngOnDestroy();
    };
    _View_RichGridDeclarativeComponent1.prototype._handle_click_7_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_7_0 = (this._AgGridNg2_39_5.context.api.selectAll() !== false);
        return (true && pd_7_0);
    };
    _View_RichGridDeclarativeComponent1.prototype._handle_click_10_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_10_0 = (this._AgGridNg2_39_5.context.api.deselectAll() !== false);
        return (true && pd_10_0);
    };
    _View_RichGridDeclarativeComponent1.prototype._handle_click_16_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_16_0 = (this._AgGridNg2_39_5.context.columnApi.setColumnVisible('country', false) !== false);
        return (true && pd_16_0);
    };
    _View_RichGridDeclarativeComponent1.prototype._handle_click_19_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_19_0 = (this._AgGridNg2_39_5.context.columnApi.setColumnVisible('country', true) !== false);
        return (true && pd_19_0);
    };
    _View_RichGridDeclarativeComponent1.prototype._handle_change_30_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_30_0 = ((this.parent.context.showToolPanel = $event.target.checked) !== false);
        return (true && pd_30_0);
    };
    _View_RichGridDeclarativeComponent1.prototype._handle_click_33_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_33_0 = (this.parent.context.createRowData() !== false);
        return (true && pd_33_0);
    };
    return _View_RichGridDeclarativeComponent1;
}(import1.AppView));
function viewFactory_RichGridDeclarativeComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_RichGridDeclarativeComponent1(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=rich-grid-declarative.component.ngfactory.js.map