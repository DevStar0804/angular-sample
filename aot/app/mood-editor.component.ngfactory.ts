/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../app/mood-editor.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from '../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import12 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import13 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/common/src/directives/ng_class';
export class Wrapper_MoodEditorComponent {
  context:import0.MoodEditorComponent;
  changed:boolean;
  constructor() {
    this.changed = false;
    this.context = new import0.MoodEditorComponent();
  }
  detectChangesInInputProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_MoodEditorComponent_Host:import2.RenderComponentType = (null as any);
class _View_MoodEditorComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _MoodEditorComponent_0_4:Wrapper_MoodEditorComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_MoodEditorComponent_Host0,renderType_MoodEditorComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'editor-cell',import4.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MoodEditorComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MoodEditorComponent_0_4 = new Wrapper_MoodEditorComponent();
    this._appEl_0.initComponent(this._MoodEditorComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._MoodEditorComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MoodEditorComponent) && (0 === requestNodeIndex))) { return this._MoodEditorComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MoodEditorComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._MoodEditorComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._MoodEditorComponent_0_4.context.ngAfterViewInit(); } }
  }
}
function viewFactory_MoodEditorComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_MoodEditorComponent_Host === (null as any))) { (renderType_MoodEditorComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_MoodEditorComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const MoodEditorComponentNgFactory:import9.ComponentFactory<import0.MoodEditorComponent> = new import9.ComponentFactory<import0.MoodEditorComponent>('editor-cell',viewFactory_MoodEditorComponent_Host0,import0.MoodEditorComponent);
const styles_MoodEditorComponent:any[] = ['.mood[_ngcontent-%COMP%] {\n            border-radius: 15px;\n            border: 1px solid grey;\n            background: #e6e6e6;\n            padding: 15px;\n            text-align:center;\n            display:inline-block;\n            outline:none\n        }\n\n        .default[_ngcontent-%COMP%] {\n            padding-left:10px;\n            padding-right:10px;\n            border: 1px solid transparent;\n            padding: 4px;\n        }\n\n        .selected[_ngcontent-%COMP%] {\n            padding-left:10px;\n            padding-right:10px;\n            border: 1px solid lightgreen;\n            padding: 4px;\n        }'];
var renderType_MoodEditorComponent:import2.RenderComponentType = (null as any);
class _View_MoodEditorComponent0 extends import1.AppView<import0.MoodEditorComponent> {
  _viewQuery_container_0:import10.QueryList<any>;
  _text_0:any;
  _el_1:any;
  /*private*/ _appEl_1:import3.AppElement;
  _text_2:any;
  _el_3:any;
  _NgClass_3_3:import11.Wrapper_NgClass;
  _text_4:any;
  _el_5:any;
  _NgClass_5_3:import11.Wrapper_NgClass;
  _text_6:any;
  _text_7:any;
  _map_12:any;
  _map_13:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_MoodEditorComponent0,renderType_MoodEditorComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
    this._map_12 = import4.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        selected: p0,
        default: p1
      }
      ;
    });
    this._map_13 = import4.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        selected: p0,
        default: p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_container_0 = new import10.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray4(4,'class','mood','tabindex','0'),(null as any));
    this._appEl_1 = new import3.AppElement(1,(null as any),this,this._el_1);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import4.createRenderElement(this.renderer,this._el_1,'img',new import4.InlineArray2(2,'src','images/smiley.png'),(null as any));
    this._NgClass_3_3 = new import11.Wrapper_NgClass(this.parentInjector.get(import12.IterableDiffers),this.parentInjector.get(import13.KeyValueDiffers),new import14.ElementRef(this._el_3),this.renderer);
    this._text_4 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_5 = import4.createRenderElement(this.renderer,this._el_1,'img',new import4.InlineArray2(2,'src','images/smiley-sad.png'),(null as any));
    this._NgClass_5_3 = new import11.Wrapper_NgClass(this.parentInjector.get(import12.IterableDiffers),this.parentInjector.get(import13.KeyValueDiffers),new import14.ElementRef(this._el_5),this.renderer);
    this._text_6 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_1,'keydown',this.eventHandler(this._handle_keydown_1_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_3,'click',this.eventHandler(this._handle_click_3_0.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_5,'click',this.eventHandler(this._handle_click_5_0.bind(this)));
    this._viewQuery_container_0.reset([this._appEl_1.vcRef]);
    this.context.container = this._viewQuery_container_0.first;
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgClass) && (3 === requestNodeIndex))) { return this._NgClass_3_3.context; }
    if (((token === import15.NgClass) && (5 === requestNodeIndex))) { return this._NgClass_5_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this._map_12(this.context.happy,!this.context.happy);
    this._NgClass_3_3.check_ngClass(currVal_3_0_0,throwOnChange,false);
    this._NgClass_3_3.detectChangesInInputProps(this,this._el_3,throwOnChange);
    const currVal_5_0_0:any = this._map_13(!this.context.happy,this.context.happy);
    this._NgClass_5_3.check_ngClass(currVal_5_0_0,throwOnChange,false);
    this._NgClass_5_3.detectChangesInInputProps(this,this._el_5,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._NgClass_3_3.detectChangesInHostProps(this,this._el_3,throwOnChange);
    this._NgClass_5_3.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_keydown_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_1_0:any = ((<any>this.context.onKeyDown($event)) !== false);
    return (true && pd_1_0);
  }
  private _handle_click_3_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_3_0:any = ((<any>this.context.setHappy(true)) !== false);
    return (true && pd_3_0);
  }
  private _handle_click_5_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this.context.setHappy(false)) !== false);
    return (true && pd_5_0);
  }
}
export function viewFactory_MoodEditorComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<import0.MoodEditorComponent> {
  if ((renderType_MoodEditorComponent === (null as any))) { (renderType_MoodEditorComponent = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.Emulated,styles_MoodEditorComponent,{})); }
  return new _View_MoodEditorComponent0(viewUtils,parentInjector,declarationEl);
}