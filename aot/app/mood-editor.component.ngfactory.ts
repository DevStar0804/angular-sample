/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../app/mood-editor.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/query_list';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import11 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import12 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/common/src/directives/ng_class';
export class Wrapper_MoodEditorComponent {
  /*private*/ _eventHandler:Function;
  context:import0.MoodEditorComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.MoodEditorComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_MoodEditorComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_MoodEditorComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.MoodEditorComponent>;
  _MoodEditorComponent_0_3:Wrapper_MoodEditorComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MoodEditorComponent_Host0,renderType_MoodEditorComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'editor-cell',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_MoodEditorComponent0(this.viewUtils,this,0,this._el_0);
    this._MoodEditorComponent_0_3 = new Wrapper_MoodEditorComponent();
    this.compView_0.create(this._MoodEditorComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._MoodEditorComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MoodEditorComponent) && (0 === requestNodeIndex))) { return this._MoodEditorComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MoodEditorComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._MoodEditorComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MoodEditorComponentNgFactory:import7.ComponentFactory<import0.MoodEditorComponent> = new import7.ComponentFactory<import0.MoodEditorComponent>('editor-cell',View_MoodEditorComponent_Host0,import0.MoodEditorComponent);
const styles_MoodEditorComponent:any[] = ['.mood[_ngcontent-%COMP%] {\n            border-radius: 15px;\n            border: 1px solid grey;\n            background: #e6e6e6;\n            padding: 15px;\n            text-align:center;\n            display:inline-block;\n            outline:none\n        }\n\n        .default[_ngcontent-%COMP%] {\n            padding-left:10px;\n            padding-right:10px;\n            border: 1px solid transparent;\n            padding: 4px;\n        }\n\n        .selected[_ngcontent-%COMP%] {\n            padding-left:10px;\n            padding-right:10px;\n            border: 1px solid lightgreen;\n            padding: 4px;\n        }'];
var renderType_MoodEditorComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_MoodEditorComponent,{});
export class View_MoodEditorComponent0 extends import1.AppView<import0.MoodEditorComponent> {
  _viewQuery_container_0:import8.QueryList<any>;
  _text_0:any;
  _el_1:any;
  /*private*/ _vc_1:import9.ViewContainer;
  _text_2:any;
  _el_3:any;
  _NgClass_3_3:import10.Wrapper_NgClass;
  _text_4:any;
  _el_5:any;
  _NgClass_5_3:import10.Wrapper_NgClass;
  _text_6:any;
  _text_7:any;
  _map_12:any;
  _map_13:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MoodEditorComponent0,renderType_MoodEditorComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._map_12 = import3.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        selected: p0,
        default: p1
      }
      ;
    });
    this._map_13 = import3.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        selected: p0,
        default: p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_container_0 = new import8.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'class','mood','tabindex','0'),(null as any));
    this._vc_1 = new import9.ViewContainer(1,(null as any),this,this._el_1);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'img',new import3.InlineArray2(2,'src','../images/smiley.png'),(null as any));
    this._NgClass_3_3 = new import10.Wrapper_NgClass(this.parentView.injectorGet(import11.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import12.KeyValueDiffers,this.parentIndex),new import13.ElementRef(this._el_3),this.renderer);
    this._text_4 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_1,'img',new import3.InlineArray2(2,'src','../images/smiley-sad.png'),(null as any));
    this._NgClass_5_3 = new import10.Wrapper_NgClass(this.parentView.injectorGet(import11.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import12.KeyValueDiffers,this.parentIndex),new import13.ElementRef(this._el_5),this.renderer);
    this._text_6 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'keydown',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_3));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_5));
    this._viewQuery_container_0.reset([this._vc_1.vcRef]);
    this.context.container = this._viewQuery_container_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.NgClass) && (3 === requestNodeIndex))) { return this._NgClass_3_3.context; }
    if (((token === import14.NgClass) && (5 === requestNodeIndex))) { return this._NgClass_5_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this._map_12(this.context.happy,!this.context.happy);
    this._NgClass_3_3.check_ngClass(currVal_3_0_0,throwOnChange,false);
    this._NgClass_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    const currVal_5_0_0:any = this._map_13(!this.context.happy,this.context.happy);
    this._NgClass_5_3.check_ngClass(currVal_5_0_0,throwOnChange,false);
    this._NgClass_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keydown')) {
      const pd_sub_0:any = ((<any>this.context.onKeyDown($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.setHappy(true)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.setHappy(false)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}