/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../app/clickable.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
export var Wrapper_ClickableComponent = (function () {
    function Wrapper_ClickableComponent() {
        this._changed = false;
        this.context = new import0.ClickableComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_ClickableComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ClickableComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_ClickableComponent.prototype.check_cell = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.cell = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ClickableComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ClickableComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ClickableComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ClickableComponent.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.onClicked.subscribe(_eventHandler.bind(view, 'onClicked')));
        }
    };
    return Wrapper_ClickableComponent;
}());
var renderType_ClickableComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_ClickableComponent_Host0 = (function (_super) {
    __extends(View_ClickableComponent_Host0, _super);
    function View_ClickableComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ClickableComponent_Host0, renderType_ClickableComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_ClickableComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ag-clickable', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ClickableComponent0(this.viewUtils, this, 0, this._el_0);
        this._ClickableComponent_0_3 = new Wrapper_ClickableComponent();
        this.compView_0.create(this._ClickableComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._ClickableComponent_0_3.context);
    };
    View_ClickableComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ClickableComponent) && (0 === requestNodeIndex))) {
            return this._ClickableComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ClickableComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ClickableComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_ClickableComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._ClickableComponent_0_3.ngOnDestroy();
    };
    View_ClickableComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ClickableComponent_Host0;
}(import2.AppView));
export var ClickableComponentNgFactory = new import7.ComponentFactory('ag-clickable', View_ClickableComponent_Host0, import0.ClickableComponent);
var styles_ClickableComponent = [];
var renderType_ClickableComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_ClickableComponent, {});
export var View_ClickableComponent0 = (function (_super) {
    __extends(View_ClickableComponent0, _super);
    function View_ClickableComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ClickableComponent0, renderType_ClickableComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_ClickableComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'button', import3.EMPTY_INLINE_ARRAY, null);
        this._text_2 = this.renderer.createText(this._el_1, 'Click Me', null);
        this._text_3 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_1));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._text_3
        ]), [disposable_0]);
        return null;
    };
    View_ClickableComponent0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.click() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_ClickableComponent0;
}(import2.AppView));
//# sourceMappingURL=clickable.component.ngfactory.js.map