/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../app/styled-renderer.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../node_modules/@angular/common/src/directives/ng_style.ngfactory';
import * as import9 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@angular/common/src/directives/ng_style';
export var Wrapper_StyledComponent = (function () {
    function Wrapper_StyledComponent() {
        this._changed = false;
        this.context = new import0.StyledComponent();
    }
    Wrapper_StyledComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_StyledComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_StyledComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_StyledComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_StyledComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_StyledComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_StyledComponent;
}());
var renderType_StyledComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_StyledComponent_Host0 = (function (_super) {
    __extends(View_StyledComponent_Host0, _super);
    function View_StyledComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_StyledComponent_Host0, renderType_StyledComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_StyledComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'floating-cell', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_StyledComponent0(this.viewUtils, this, 0, this._el_0);
        this._StyledComponent_0_3 = new Wrapper_StyledComponent();
        this.compView_0.create(this._StyledComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._StyledComponent_0_3.context);
    };
    View_StyledComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.StyledComponent) && (0 === requestNodeIndex))) {
            return this._StyledComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_StyledComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._StyledComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_StyledComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_StyledComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_StyledComponent_Host0;
}(import1.AppView));
export var StyledComponentNgFactory = new import7.ComponentFactory('floating-cell', View_StyledComponent_Host0, import0.StyledComponent);
var styles_StyledComponent = [];
var renderType_StyledComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_StyledComponent, {});
export var View_StyledComponent0 = (function (_super) {
    __extends(View_StyledComponent0, _super);
    function View_StyledComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_StyledComponent0, renderType_StyledComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
        this._expr_3 = import6.UNINITIALIZED;
    }
    View_StyledComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'span', import3.EMPTY_INLINE_ARRAY, null);
        this._NgStyle_0_3 = new import8.Wrapper_NgStyle(this.parentView.injectorGet(import9.KeyValueDiffers, this.parentIndex), new import10.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_StyledComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgStyle_0_3.context;
        }
        return notFoundResult;
    };
    View_StyledComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.style;
        this._NgStyle_0_3.check_ngStyle(currVal_0_0_0, throwOnChange, false);
        this._NgStyle_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_3 = import3.inlineInterpolate(1, '', this.context.params.value, '');
        if (import3.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setText(this._text_1, currVal_3);
            this._expr_3 = currVal_3;
        }
    };
    return View_StyledComponent0;
}(import1.AppView));
//# sourceMappingURL=styled-renderer.component.ngfactory.js.map