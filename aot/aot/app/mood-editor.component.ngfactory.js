/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../app/mood-editor.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from '../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import12 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import13 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/common/src/directives/ng_class';
export var Wrapper_MoodEditorComponent = (function () {
    function Wrapper_MoodEditorComponent() {
        this.changed = false;
        this.context = new import0.MoodEditorComponent();
    }
    Wrapper_MoodEditorComponent.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    Wrapper_MoodEditorComponent.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_MoodEditorComponent;
}());
var renderType_MoodEditorComponent_Host = null;
var _View_MoodEditorComponent_Host0 = (function (_super) {
    __extends(_View_MoodEditorComponent_Host0, _super);
    function _View_MoodEditorComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MoodEditorComponent_Host0, renderType_MoodEditorComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_MoodEditorComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer, 'editor-cell', import4.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MoodEditorComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._MoodEditorComponent_0_4 = new Wrapper_MoodEditorComponent();
        this._appEl_0.initComponent(this._MoodEditorComponent_0_4.context, [], compView_0);
        compView_0.create(this._MoodEditorComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MoodEditorComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.MoodEditorComponent) && (0 === requestNodeIndex))) {
            return this._MoodEditorComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_MoodEditorComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MoodEditorComponent_0_4.detectChangesInInputProps(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._MoodEditorComponent_0_4.detectChangesInHostProps(this, this._el_0, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._MoodEditorComponent_0_4.context.ngAfterViewInit();
            }
        }
    };
    return _View_MoodEditorComponent_Host0;
}(import1.AppView));
function viewFactory_MoodEditorComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MoodEditorComponent_Host === null)) {
        (renderType_MoodEditorComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_MoodEditorComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var MoodEditorComponentNgFactory = new import9.ComponentFactory('editor-cell', viewFactory_MoodEditorComponent_Host0, import0.MoodEditorComponent);
var styles_MoodEditorComponent = ['.mood[_ngcontent-%COMP%] {\n            border-radius: 15px;\n            border: 1px solid grey;\n            background: #e6e6e6;\n            padding: 15px;\n            text-align:center;\n            display:inline-block;\n            outline:none\n        }\n\n        .default[_ngcontent-%COMP%] {\n            padding-left:10px;\n            padding-right:10px;\n            border: 1px solid transparent;\n            padding: 4px;\n        }\n\n        .selected[_ngcontent-%COMP%] {\n            padding-left:10px;\n            padding-right:10px;\n            border: 1px solid lightgreen;\n            padding: 4px;\n        }'];
var renderType_MoodEditorComponent = null;
var _View_MoodEditorComponent0 = (function (_super) {
    __extends(_View_MoodEditorComponent0, _super);
    function _View_MoodEditorComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MoodEditorComponent0, renderType_MoodEditorComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
        this._map_12 = import4.pureProxy2(function (p0, p1) {
            return {
                selected: p0,
                default: p1
            };
        });
        this._map_13 = import4.pureProxy2(function (p0, p1) {
            return {
                selected: p0,
                default: p1
            };
        });
    }
    _View_MoodEditorComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_container_0 = new import10.QueryList();
        this._text_0 = this.renderer.createText(parentRenderNode, '\n        ', null);
        this._el_1 = import4.createRenderElement(this.renderer, parentRenderNode, 'div', new import4.InlineArray4(4, 'class', 'mood', 'tabindex', '0'), null);
        this._appEl_1 = new import3.AppElement(1, null, this, this._el_1);
        this._text_2 = this.renderer.createText(this._el_1, '\n            ', null);
        this._el_3 = import4.createRenderElement(this.renderer, this._el_1, 'img', new import4.InlineArray2(2, 'src', '../images/smiley.png'), null);
        this._NgClass_3_3 = new import11.Wrapper_NgClass(this.parentInjector.get(import12.IterableDiffers), this.parentInjector.get(import13.KeyValueDiffers), new import14.ElementRef(this._el_3), this.renderer);
        this._text_4 = this.renderer.createText(this._el_1, '\n            ', null);
        this._el_5 = import4.createRenderElement(this.renderer, this._el_1, 'img', new import4.InlineArray2(2, 'src', '../images/smiley-sad.png'), null);
        this._NgClass_5_3 = new import11.Wrapper_NgClass(this.parentInjector.get(import12.IterableDiffers), this.parentInjector.get(import13.KeyValueDiffers), new import14.ElementRef(this._el_5), this.renderer);
        this._text_6 = this.renderer.createText(this._el_1, '\n        ', null);
        this._text_7 = this.renderer.createText(parentRenderNode, '\n    ', null);
        var disposable_0 = this.renderer.listen(this._el_1, 'keydown', this.eventHandler(this._handle_keydown_1_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_3, 'click', this.eventHandler(this._handle_click_3_0.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_5, 'click', this.eventHandler(this._handle_click_5_0.bind(this)));
        this._viewQuery_container_0.reset([this._appEl_1.vcRef]);
        this.context.container = this._viewQuery_container_0.first;
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._text_7
        ], [
            disposable_0,
            disposable_1,
            disposable_2
        ], []);
        return null;
    };
    _View_MoodEditorComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.NgClass) && (3 === requestNodeIndex))) {
            return this._NgClass_3_3.context;
        }
        if (((token === import15.NgClass) && (5 === requestNodeIndex))) {
            return this._NgClass_5_3.context;
        }
        return notFoundResult;
    };
    _View_MoodEditorComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this._map_12(this.context.happy, !this.context.happy);
        this._NgClass_3_3.check_ngClass(currVal_3_0_0, throwOnChange, false);
        this._NgClass_3_3.detectChangesInInputProps(this, this._el_3, throwOnChange);
        var currVal_5_0_0 = this._map_13(!this.context.happy, this.context.happy);
        this._NgClass_5_3.check_ngClass(currVal_5_0_0, throwOnChange, false);
        this._NgClass_5_3.detectChangesInInputProps(this, this._el_5, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._NgClass_3_3.detectChangesInHostProps(this, this._el_3, throwOnChange);
        this._NgClass_5_3.detectChangesInHostProps(this, this._el_5, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_MoodEditorComponent0.prototype._handle_keydown_1_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_1_0 = (this.context.onKeyDown($event) !== false);
        return (true && pd_1_0);
    };
    _View_MoodEditorComponent0.prototype._handle_click_3_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_3_0 = (this.context.setHappy(true) !== false);
        return (true && pd_3_0);
    };
    _View_MoodEditorComponent0.prototype._handle_click_5_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_5_0 = (this.context.setHappy(false) !== false);
        return (true && pd_5_0);
    };
    return _View_MoodEditorComponent0;
}(import1.AppView));
export function viewFactory_MoodEditorComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MoodEditorComponent === null)) {
        (renderType_MoodEditorComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.Emulated, styles_MoodEditorComponent, {}));
    }
    return new _View_MoodEditorComponent0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=mood-editor.component.ngfactory.js.map